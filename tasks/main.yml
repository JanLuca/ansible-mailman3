---

- name: Ensure that git is installed
  apt: name=git
       state=present
  when: ansible_os_family == 'Debian'
  tags: git

- name: Ensure that basic build tools are installed
  apt:
    name: '{{item}}'
  with_items:
  - build-essential
  when: ansible_os_family == 'Debian'

- name: Install python3 dependencies for Mailman 3
  apt:
    name: '{{item}}'
  with_items:
  - python3-dev
  - python3-pip
  - python-dev
  - python-pip
  - python-virtualenv
  when: ansible_os_family == 'Debian'

- name: Ensure that ruby-sass is installed
  apt: name=ruby-sass
       state=present
  when: ansible_os_family == 'Debian'

- include: user.yml

- include: nodenv.yml
  vars:
    node_version: 4.4.2
    nodenv_user: '{{mailman_user}}'
    nodenv_group: '{{mailman_group}}'
  tags: node

- name: clone mailman-bundler
  git: repo=https://gitlab.com/mailman/mailman-bundler.git
       dest=/srv/mailman/bundler
       version={{mailman_bundler_version|default('HEAD')}}
       depth=1
  register: cloned_mailman_bundler

- name: change ownership of mailman-bundler
  file:
    path: ~{{mailman_user}}/bundler
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    recurse: yes
  when: cloned_mailman_bundler.changed

- name: Setup a virtualenv for mailman
  command: su - {{mailman_user}} -c "virtualenv {{mailman_path}}/venv" creates="{{mailman_path}}/venv"

- name: Install buildout for mailman
  pip: name=zc.buildout
       virtualenv={{mailman_path}}/venv 

- name: Create script directory
  file: path={{mailman_path}}/scripts
        state=directory
        owner={{mailman_user}}
        group={{mailman_group}}
        mode=0700

- name: copy install.sh
  template: src=install.sh.jinja2
            dest={{mailman_path}}/scripts/install.sh
            owner={{mailman_user}}
            group={{mailman_group}}
            mode=0700

- name: copy superuser.sh
  template: src=superuser.sh.jinja2
            dest={{mailman_path}}/scripts/superuser.sh
            owner={{mailman_user}}
            group={{mailman_group}}
            mode=0700

- name: Run install.sh
  command: su - {{mailman_user}} -c "{{mailman_path}}/scripts/install.sh" creates="{{mailman_path}}/install.done"

- name: Create superuser
  expect:
    command: su - {{mailman_user}} -c "{{mailman_path}}/scripts/superuser.sh" creates="{{mailman_path}}/superuser.done"
    responses: 
      (?i)Username: '{{mailman_superuser_name}}'
      (?i)Email:    '{{mailman_superuser_email}}'
      (?i)Password: '{{mailman_superuser_password}}'
