---

- name: Ensure that git is installed
  apt:
    name: git
  when: ansible_os_family == 'Debian'
  tags: git

- name: Ensure that basic build tools are installed
  apt:
    name: '{{item}}'
  with_items:
  - build-essential
  when: ansible_os_family == 'Debian'

- name: Install python2/3 basic dependencies for Mailman 3
  apt:
    name: '{{item}}'
  with_items:
  - python3-dev
  - python3-pip
  - python-dev
  - python-pip
  - python3-setuptools
  - python3-wheel
  - python-wheel
  - python-setuptools
  when: ansible_os_family == 'Debian'
  notify: Restart mailman3 and mailman-uwsgi

- name: Install python3 dependencies for mailman3
  apt:
    name: '{{item}}'
  with_items:
  - python3-alembic
  - python3-click
  - python3-dnspython
  - python3-falcon
  - python3-flufl.bounce
  - python3-flufl.i18n
  - python3-flufl.lock
  - python3-lazr.config
  - python3-passlib
  - python3-requests
  - python3-sqlalchemy
  - python3-zope.component
  - python3-zope.configuration
  - python3-zope.event
  - python3-zope.interface
  when: ansible_os_family == 'Debian'
  notify: Restart mailman3

- name: Install python2 dependencies for hyperkitty/postorios
  apt:
    name: '{{item}}'
  with_items:
  - python-django
  - python-django-gravatar2
  - python-openid
  - python-requests
  - python-requests-oauthlib
  - python-httplib2
  - python-six
  - python-tz
  - python-zope.interface
  - python-djangorestframework
  - python-rjsmin
  - python-cssmin
  - python-django-compressor
  - python-dateutil
  - python-networkx
  - python-enum34
  - python-django-haystack
  - python-django-extensions
  - python-lockfile
  - python-future
  - python-arrow
  - python-blessed
  - python-django-picklefield
  - python-whoosh
  when: ansible_os_family == 'Debian'
  notify: Restart mailman-uwsgi

- name: Ensure that sassc is installed
  apt:
    name: 'sassc'
  when: ansible_os_family == 'Debian'
  notify: Restart mailman-uwsgi

- name: Ensure that lessc is installed
  apt:
    name: 'node-less'
  when: ansible_os_family == 'Debian'
  notify: Restart mailman-uwsgi

- name: Ensure that pexpect is installed
  apt:
    name: 'python-pexpect'
  when: ansible_os_family == 'Debian'

- name: Ensure that sqlite3 is installed
  apt:
    name: 'sqlite3'
  when: ansible_os_family == 'Debian'

- name: Ensure that uwsgi is installed
  apt:
    name: '{{item}}'
  with_items:
  - uwsgi
  - uwsgi-plugin-python
  - uwsgi-plugin-python3
  when: ansible_os_family == 'Debian'
  notify: Restart mailman-uwsgi

- include: user.yml

- name: Install mailman using pip3
  pip:
    name: 'mailman'
    executable: 'pip3'
    state: 'latest'
  register: mailman_pip_mailman
  notify: Restart mailman3

- name: Install mailman-hyperkitty using pip3
  pip:
    name: 'mailman-hyperkitty'
    executable: 'pip3'
    state: 'latest'
  register: mailman_hyperkitty_pip_mailman
  notify: Restart mailman3

- name: Ensure basic file structure is installed
  command: mailman info
  args:
    chdir: '{{mailman_path}}'
    creates: '{{mailman_path}}/var/etc/mailman.cfg'
  become: true
  become_user: '{{mailman_user}}'
  no_log: True
  notify: Restart mailman3

- name: copy mailman.cfg
  template:
    src:   mailman.cfg.jinja2
    dest:  '{{mailman_path}}/var/etc/mailman.cfg'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0600
  no_log: True
  notify: Restart mailman3

- name: copy mailman-hyperkitty.cfg
  template:
    src:   mailman-hyperkitty.cfg.jinja2
    dest:  '{{mailman_path}}/var/etc/mailman-hyperkitty.cfg'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0600
  no_log: True
  notify: Restart mailman3

- name: Install postorius
  pip:
    name: 'postorius'
    executable: 'pip2'
    state: 'latest'
  register: mailman_pip_postorius
  notify: Restart mailman-uwsgi

- name: Install hyperkitty
  pip:
    name: 'hyperkitty'
    executable: 'pip2'
    state: 'latest'
  register: mailman_pip_hyperkitty
  notify: Restart mailman-uwsgi

- name: Install mailmanclient
  pip:
    name: 'mailmanclient'
    executable: 'pip2'
    state: 'latest'
  notify: Restart mailman-uwsgi

- name: copy settings.py
  copy:
    src:   'files/settings.py'
    dest:  '{{mailman_path}}/settings.py'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0600
    follow: True
  notify: Restart mailman-uwsgi

- name: copy manage.py
  copy:
    src:    'files/manage.py'
    dest:   '{{mailman_path}}/manage.py'
    owner:  '{{mailman_user}}'
    group:  '{{mailman_group}}'
    mode:   0700
    follow: True
  notify: Restart mailman-uwsgi

- name: copy urls.py
  copy:
    src:    'files/urls.py'
    dest:   '{{mailman_path}}/urls.py'
    owner:  '{{mailman_user}}'
    group:  '{{mailman_group}}'
    mode:   0600
    follow: True
  notify: Restart mailman-uwsgi

- name: copy wsgi.py
  copy:
    src:    'files/wsgi.py'
    dest:   '{{mailman_path}}/wsgi.py'
    owner:  '{{mailman_user}}'
    group:  '{{mailman_group}}'
    mode:   0700
    follow: True
  notify: Restart mailman-uwsgi

- name: Copy setting_local.py to right place
  template:
    src:   settings_local.py.jinja2
    dest:  '{{mailman_path}}/settings_local.py'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0640
  register: settings_copied
  no_log: True
  notify: Restart mailman-uwsgi

- name: Copy crontab to /etc/cron.d
  template:
    src:   crontab.jinja2
    dest:  '/etc/cron.d/mailman'
    owner: 'root'
    group: 'root'
    mode:  0644

- name: copy superuser.sh
  template:
    src:   superuser.sh.jinja2
    dest:  '{{mailman_path}}/superuser.sh'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0700

- name: copy fix-site-name.sh
  template:
    src:   fix-site-name.sh.jinja2
    dest:  '{{mailman_path}}/fix-site-name.sh'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0700

- name: Create logs dir
  file:
    path:  '{{mailman_path}}/logs'
    state: 'directory'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0770

- name: Create media dir
  file:
    path:  '{{mailman_path}}/var/media'
    state: 'directory'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0700

- name: Create fulltext_index dir
  file:
    path:  '{{mailman_path}}/var/fulltext_index'
    state: 'directory'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0700

- name: Migrate Django-DB
  command: '{{mailman_path}}/manage.py migrate --no-input'
  args:
    chdir: '{{mailman_path}}'
  when: mailman_pip_postorius.changed or mailman_pip_hyperkitty.changed
  become: true
  become_user: '{{mailman_user}}'
  notify: Restart mailman-uwsgi

- name: Collect static files
  command: '{{mailman_path}}/manage.py collectstatic --no-input'
  args:
    chdir: '{{mailman_path}}'
  when: mailman_pip_postorius.changed or mailman_pip_hyperkitty.changed
  become: true
  become_user: '{{mailman_user}}'
  notify: Restart mailman-uwsgi

- name: Compress Django files
  command: '{{mailman_path}}/manage.py compress'
  args:
    chdir: '{{mailman_path}}'
  when: mailman_pip_postorius.changed or mailman_pip_hyperkitty.changed
  become: true
  become_user: '{{mailman_user}}'
  notify: Restart mailman-uwsgi

- name: Create superuser
  expect:
    command: "{{mailman_path}}/superuser.sh"
    creates: "{{mailman_path}}/superuser.done"
    responses: 
      Username: "{{mailman_superuser_name}}\n"
      Email:    "{{mailman_superuser_email}}\n"
      Password: "{{mailman_superuser_password}}\n"
  become: True
  become_user: "{{mailman_user}}"
  no_log: True
  notify: Restart mailman-uwsgi

- name: Fix Django site name
  command: "{{mailman_path}}/fix-site-name.sh"
  args:
    creates: "{{mailman_path}}/fix-site-name.done"
    chdir:   "{{mailman_path}}"
  become: True
  become_user: "{{mailman_user}}"
  notify: Restart mailman-uwsgi

- name: Add destination for mailman
  lineinfile:
    dest:  "/etc/postfix/destinations"
    line:  "{{item}} OK"
    regexp: "^{{item}}"
    insertbefore: "BOF"
  with_items: '{{mailman_domains}}'
  register: dest_file

- name: Run postmap for the destination file
  command: "postmap /etc/postfix/destinations"
  notify: reload postfix
  when: dest_file.changed

- name: Copy postfix config into main.cf
  blockinfile:
    dest:  "/etc/postfix/main.cf"
    marker:  "## {mark} ANSIBLE MANAGED BLOCK FOR MAILMAN3 ##"
    insertafter: "EOF"
    block: "{{ lookup('template', 'postfix.cf.jinja2') }}"
  notify: reload postfix

- name: Copy mailman3.service
  template:
    src:   mailman3.service.jinja2
    dest:  '/etc/systemd/system/mailman3.service'
    owner: 'root'
    group: 'root'
    mode:  0644
  notify: Restart mailman3

- name: Copy uwsgi.cfg
  template:
    src:   uwsgi.cfg.jinja2
    dest:  '{{mailman_path}}/uwsgi.cfg'
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    mode:  0600
  notify: Restart mailman-uwsgi

- name: Copy mailman-uwsgi.service
  template:
    src:   mailman-uwsgi.service.jinja2
    dest:  '/etc/systemd/system/mailman-uwsgi.service'
    owner: 'root'
    group: 'root'
    mode:  0644
  notify: Restart mailman-uwsgi

- name: Copy nginx-site config
  template:
    src:   nginx-site.jinja2
    dest:  '{{mailman_path}}/nginx-mailman'
    owner: 'root'
    group: 'root'
    mode:  0644

- name: Enable and start Mailman3
  systemd:
    name:          'mailman3'
    state:         started
    daemon_reload: yes
    enabled:       yes

- name: Enable and start mailman-uwsgi
  systemd:
    name:          'mailman-uwsgi'
    state:         started
    daemon_reload: yes
    enabled:       yes
