---

- name: Ensure that git is installed
  apt: name=git
       state=present
  when: ansible_os_family == 'Debian'
  tags: git

- name: Ensure that basic build tools are installed
  apt:
    name: '{{item}}'
  with_items:
  - build-essential
  when: ansible_os_family == 'Debian'

- name: Install python3 dependencies for Mailman 3
  apt:
    name: '{{item}}'
  with_items:
  - python3-dev
  - python3-pip
  - python-dev
  - python-pip
  - python-virtualenv
  when: ansible_os_family == 'Debian'

- name: Ensure that ruby-sass is installed
  apt: name=ruby-sass
       state=present
  when: ansible_os_family == 'Debian'

- name: Ensure that pexpect is installed
  pip: name=pexpect

- include: user.yml

#- include: nodenv.yml
#  vars:
#    node_version: 4.4.2
#    nodenv_user: '{{mailman_user}}'
#    nodenv_group: '{{mailman_group}}'
#  tags: node

# Not use depth since GitLab does not support it :-(
- name: clone mailman-bundler
  git: repo=https://gitlab.com/mailman/mailman-bundler.git
       dest=/srv/mailman/bundler
       version={{mailman_bundler_version|default('HEAD')}}
  register: cloned_mailman_bundler

- name: change ownership of mailman-bundler
  file:
    path: ~{{mailman_user}}/bundler
    owner: '{{mailman_user}}'
    group: '{{mailman_group}}'
    recurse: yes
  when: cloned_mailman_bundler.changed

- name: Setup a virtualenv for mailman
  command: su - {{mailman_user}} -c "virtualenv {{mailman_path}}/venv" creates="{{mailman_path}}/venv"

- name: Install buildout for mailman
  pip: name=zc.buildout
       virtualenv={{mailman_path}}/venv 

- name: Create script directory
  file: path={{mailman_path}}/scripts
        state=directory
        owner={{mailman_user}}
        group={{mailman_group}}
        mode=0700

- name: copy install.sh
  template: src=install.sh.jinja2
            dest={{mailman_path}}/scripts/install.sh
            owner={{mailman_user}}
            group={{mailman_group}}
            mode=0700

- name: copy superuser.sh
  template: src=superuser.sh.jinja2
            dest={{mailman_path}}/scripts/superuser.sh
            owner={{mailman_user}}
            group={{mailman_group}}
            mode=0700

- name: copy downgrade_falcon.sh
  template: src=downgrade_falcon.sh.jinja2
            dest={{mailman_path}}/scripts/downgrade_falcon.sh
            owner={{mailman_user}}
            group={{mailman_group}}
            mode=0700

- name: Copy buildout config to own file
  copy:
    src:        "{{mailman_path}}/bundler/buildout.cfg"
    dest:       "{{mailman_path}}/bundler/my_buildout.cfg"
    owner:      "{{mailman_user}}"
    group:      "{{mailman_group}}"
    remote_src: True
    force:      no

- name: Set buildout to production mode
  lineinfile:
    dest:   "{{mailman_path}}/bundler/my_buildout.cfg"
    regexp: "^deployment"
    line:   "deployment = production"

- name: Run install.sh
  command: su - {{mailman_user}} -c "{{mailman_path}}/scripts/install.sh" creates="{{mailman_path}}/install.done"

- name: Create superuser
  expect:
    command: su - {{mailman_user}} -c "{{mailman_path}}/scripts/superuser.sh"
    creates: "{{mailman_path}}/superuser.done"
    responses: 
      (?i)Username: '{{mailman_superuser_name}}'
      (?i)Email:    '{{mailman_superuser_email}}'
      (?i)Password: '{{mailman_superuser_password}}'

- name: Create log directory for mailman-web
  file:
    path:  "/var/log/mailman-web"
    state: "directory"
    owner: "{{mailman_user}}"
    group: "{{mailman_group}}"
    mode:  "0770"

- name: Copy setting_local.py to right place
  template: src=settings_local.py.jinja2
            dest={{mailman_path}}/bundler/mailman_web/settings_local.py
            owner={{mailman_user}}
            group={{mailman_group}}
            mode=0600
  register: settings_copied

- name: Set site owner in mailman.cfg
  lineinfile:
    dest:   "{{mailman_path}}/bundler/deployment/mailman.cfg"
    regexp: "^site_owner"
    line:   "site_owner = {{mailman_superuser_email}}"

- name: Set the API key in mailman.cfg
  lineinfile:
    dest:   "{{mailman_path}}/bundler/deployment/mailman-hyperkitty.cfg"
    regexp: "^api_key"
    line:   "api_key = {{mailman_api_key}}"

- name: Set user for mailman-web-gunicorn.service
  lineinfile:
    dest:   "{{mailman_path}}/bundler/deployment/mailman-web-gunicorn.service"
    regexp: "User"
    line:   "User=www-data"

- name: Set group for mailman-web-gunicorn.service
  lineinfile:
    dest:   "{{mailman_path}}/bundler/deployment/mailman-web-gunicorn.service"
    regexp: "Group"
    line:   "Group=mailman"

- name: Set socket in gunicorn.conf
  lineinfile:
    dest:   "{{mailman_path}}/bundler/deployment/gunicorn.conf"
    regexp: "^bind"
    line:   "bind = ['unix:{{mailman_path}}/bundler/var/gunicorn.socket']"

- name: Run downgrade_falcon.sh
  command: su - {{mailman_user}} -c "{{mailman_path}}/scripts/downgrade_falcon.sh" creates="{{mailman_path}}/downgrade_falcon.done"

#- name: Downgrade falcon to version 0.3
#  pip:
#    name:       "falcon"
#    version:    "0.3"
#    virtualenv: "{{mailman_path}}/bundler/venv-3.4"

#- name: Upgrade mailman to latest version
#  pip: 
#    name:       "mailman"
#    state:    "latest"
#    virtualenv: "{{mailman_path}}/bundler/venv-3.4"

- name: Add destination for mailman
  lineinfile:
    dest:  "/etc/postfix/destinations"
    line:  "{{mailman_domain}} OK"
    regexp: "^{{mailman_domain}}"
    insertbefore: "BOF"
  register: dest_file

- name: Run postmap for the destination file
  command: "postmap /etc/postfix/destinations"
  notify: reload postfix
  when: dest_file.changed

- name: Fetch postfix config for mailman
  fetch:
    dest: "/tmp/mailmain_postfix.cfg"
    src:  "{{mailman_path}}/bundler/deployment/postfix-main.cf"
    flat: "yes"

- name: Copy postfix config into main.cf
  blockinfile:
    dest:  "/etc/postfix/main.cf"
    marker:  "## {mark} ANSIBLE MANAGED BLOCK FOR MAILMAN3 ##"
    insertafter: "EOF"
    block: "{{ lookup('file', '/tmp/mailmain_postfix.cfg') }}"

- name: Run post update
  command: su - {{mailman_user}} -c "{{mailman_path}}/bundler/bin/mailman-post-update"
  when: settings_copied.changed

- name: Copy mailman3.service file to systemd dir
  copy:
    src:        "{{mailman_path}}/bundler/deployment/mailman3.service"
    dest:       "/etc/systemd/system/mailman3.service"
    owner:      "root"
    group:      "root"
    remote_src: True
    force:      no

- name: Enable and start mailman3.service
  service:
    name:    "mailman3"
    state:   "started"
    enabled: "yes"

- name: Copy mailman-web-gunicorn.service file to systemd dir
  copy:
    src:        "{{mailman_path}}/bundler/deployment/mailman-web-gunicorn.service"
    dest:       "/etc/systemd/system/mailman-web-gunicorn.service"
    owner:      "root"
    group:      "root"
    remote_src: True
    force:      no

- name: Enable and start mailman-web-gunicorn.service
  service:
    name:    "mailman-web-gunicorn"
    state:   "started"
    enabled: "yes"

